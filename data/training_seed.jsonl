{"constraints":{},"prompt":"Greet politely in one line.","provenance":{"prompt_hash":"seed::eng_greet_1","source":"seed","teacher_hash":"1001"},"teacher_output":"Hello. Nice to meet you."}
{"constraints":{},"prompt":"Reply to: Hello","provenance":{"prompt_hash":"seed::eng_reply_hello","source":"seed","teacher_hash":"1002"},"teacher_output":"Hi there."}
{"constraints":{},"prompt":"Ask how someone is, short.","provenance":{"prompt_hash":"seed::eng_ask_how","source":"seed","teacher_hash":"1003"},"teacher_output":"How are you?"}
{"constraints":{},"prompt":"Answer: How are you?","provenance":{"prompt_hash":"seed::eng_answer_how","source":"seed","teacher_hash":"1004"},"teacher_output":"I'm well, thanks. How about you?"}
{"constraints":{},"prompt":"Morning greeting.","provenance":{"prompt_hash":"seed::eng_morning","source":"seed","teacher_hash":"1005"},"teacher_output":"Good morning."}
{"constraints":{},"prompt":"Make a polite request: open the door.","provenance":{"prompt_hash":"seed::eng_request_open","source":"seed","teacher_hash":"1006"},"teacher_output":"Please open the door."}
{"constraints":{},"prompt":"Fix grammar: 'She don't like it.'","provenance":{"prompt_hash":"seed::eng_grammar_1","source":"seed","teacher_hash":"1007"},"teacher_output":"She doesn't like it."}
{"constraints":{},"prompt":"Fix grammar: 'They was late.'","provenance":{"prompt_hash":"seed::eng_grammar_2","source":"seed","teacher_hash":"1008"},"teacher_output":"They were late."}
{"constraints":{},"prompt":"Choose the correct article: '___ apple'.","provenance":{"prompt_hash":"seed::eng_article_apple","source":"seed","teacher_hash":"1009"},"teacher_output":"an apple"}
{"constraints":{},"prompt":"Explain when to use 'a' vs 'an' in one line.","provenance":{"prompt_hash":"seed::eng_article_rule","source":"seed","teacher_hash":"1010"},"teacher_output":"'A' before consonant sounds; 'an' before vowel sounds."}
{"constraints":{},"prompt":"Pluralize: 'mouse'.","provenance":{"prompt_hash":"seed::eng_plural_mouse","source":"seed","teacher_hash":"1011"},"teacher_output":"mice"}
{"constraints":{},"prompt":"Past tense: 'go'.","provenance":{"prompt_hash":"seed::eng_past_go","source":"seed","teacher_hash":"1012"},"teacher_output":"went"}
{"constraints":{},"prompt":"Paraphrase: 'The system failed to load.'","provenance":{"prompt_hash":"seed::eng_paraphrase_1","source":"seed","teacher_hash":"1013"},"teacher_output":"The system did not load successfully."}
{"constraints":{},"prompt":"Turn passive to active: 'The file was saved by the user.'","provenance":{"prompt_hash":"seed::eng_active_1","source":"seed","teacher_hash":"1014"},"teacher_output":"The user saved the file."}
{"constraints":{},"prompt":"Define a noun in one line.","provenance":{"prompt_hash":"seed::eng_define_noun","source":"seed","teacher_hash":"1015"},"teacher_output":"A noun names a person, place, thing, or idea."}
{"constraints":{},"prompt":"Define a verb in one line.","provenance":{"prompt_hash":"seed::eng_define_verb","source":"seed","teacher_hash":"1016"},"teacher_output":"A verb expresses an action or a state of being."}
{"constraints":{},"prompt":"Explain a comma in one line.","provenance":{"prompt_hash":"seed::eng_punct_comma","source":"seed","teacher_hash":"1017"},"teacher_output":"A comma separates parts of a sentence to clarify meaning."}
{"constraints":{},"prompt":"Explain a period in one line.","provenance":{"prompt_hash":"seed::eng_punct_period","source":"seed","teacher_hash":"1018"},"teacher_output":"A period ends a sentence."}
{"constraints":{},"prompt":"Write a short two-sentence self-intro.","provenance":{"prompt_hash":"seed::eng_self_intro","source":"seed","teacher_hash":"1019"},"teacher_output":"I'm a software assistant. I try to be clear and concise."}
{"constraints":{},"prompt":"Short encouragement.","provenance":{"prompt_hash":"seed::eng_encourage","source":"seed","teacher_hash":"1020"},"teacher_output":"Keep going; you've got this."}
{"constraints":{},"prompt":"C++: Print \"Hello, world!\" using iostream.","provenance":{"prompt_hash":"seed::cpp_hello","source":"seed","teacher_hash":"2001"},"teacher_output":"#include <iostream>\nint main(){ std::cout << \"Hello, world!\\n\"; }"}
{"constraints":{},"prompt":"C++: Explain const correctness in one line.","provenance":{"prompt_hash":"seed::cpp_const","source":"seed","teacher_hash":"2002"},"teacher_output":"Const correctness prevents unintended mutation by marking data and member functions as read-only where possible."}
{"constraints":{},"prompt":"C++: Prefer pass-by-const-reference over pass-by-value for large objects - why?","provenance":{"prompt_hash":"seed::cpp_constref","source":"seed","teacher_hash":"2003"},"teacher_output":"It avoids copies and preserves immutability for efficiency and safety."}
{"constraints":{},"prompt":"C++: Show a function taking const std::string& and returning size_t.","provenance":{"prompt_hash":"seed::cpp_func_sig","source":"seed","teacher_hash":"2004"},"teacher_output":"#include <string>\nsize_t length_of(const std::string& s){ return s.size(); }"}
{"constraints":{},"prompt":"C++: What is RAII in one sentence?","provenance":{"prompt_hash":"seed::cpp_raii","source":"seed","teacher_hash":"2005"},"teacher_output":"RAII binds resource lifetime to object lifetime so acquisition and release happen in constructors and destructors."}
{"constraints":{},"prompt":"C++: Show RAII with std::unique_ptr for an int.","provenance":{"prompt_hash":"seed::cpp_unique_ptr_basic","source":"seed","teacher_hash":"2006"},"teacher_output":"#include <memory>\nstd::unique_ptr<int> p = std::make_unique<int>(42);"}
{"constraints":{},"prompt":"C++: unique_ptr vs shared_ptr in one line.","provenance":{"prompt_hash":"seed::cpp_unique_vs_shared","source":"seed","teacher_hash":"2007"},"teacher_output":"unique_ptr has sole ownership; shared_ptr uses reference counting for shared ownership."}
{"constraints":{},"prompt":"C++: Demonstrate move semantics with std::string.","provenance":{"prompt_hash":"seed::cpp_move","source":"seed","teacher_hash":"2008"},"teacher_output":"#include <string>\nstd::string a = \"data\"; std::string b = std::move(a);"}
{"constraints":{},"prompt":"C++: Explain the Rule of Five in one line.","provenance":{"prompt_hash":"seed::cpp_rule_of_five","source":"seed","teacher_hash":"2009"},"teacher_output":"If a type manages resources, define or delete copy/move ctor, copy/move assign, and destructor."}
{"constraints":{},"prompt":"C++: Give a noexcept move constructor example signature.","provenance":{"prompt_hash":"seed::cpp_noexcept_move","source":"seed","teacher_hash":"2010"},"teacher_output":"MyType(MyType&&) noexcept = default;"}
{"constraints":{},"prompt":"C++: Show range-based for over std::vector<int>.","provenance":{"prompt_hash":"seed::cpp_range_for","source":"seed","teacher_hash":"2011"},"teacher_output":"#include <vector>\nstd::vector<int> v{1,2,3}; for(int x : v){ /*...*/ }"}
{"constraints":{},"prompt":"C++: Explain enum class vs enum in one line.","provenance":{"prompt_hash":"seed::cpp_enum_class","source":"seed","teacher_hash":"2012"},"teacher_output":"enum class is scoped and doesn't implicitly convert to int; old enum is unscoped and implicitly convertible."}
{"constraints":{},"prompt":"C++: Provide a constexpr function squaring an int.","provenance":{"prompt_hash":"seed::cpp_constexpr_square","source":"seed","teacher_hash":"2013"},"teacher_output":"constexpr int sq(int x){ return x*x; }"}
{"constraints":{},"prompt":"C++: Capture by reference in a lambda summing a vector.","provenance":{"prompt_hash":"seed::cpp_lambda_capture_ref","source":"seed","teacher_hash":"2014"},"teacher_output":"#include <vector>\nint sum=0; std::vector<int> v{1,2,3}; auto f=[&]{ for(int x:v) sum+=x; }; f();"}
{"constraints":{},"prompt":"C++: Why reserve() on std::vector improves performance?","provenance":{"prompt_hash":"seed::cpp_vector_reserve","source":"seed","teacher_hash":"2015"},"teacher_output":"It preallocates capacity to reduce reallocations and copies during growth."}
{"constraints":{},"prompt":"C++: Show std::optional<int> usage returning maybe a value.","provenance":{"prompt_hash":"seed::cpp_optional","source":"seed","teacher_hash":"2016"},"teacher_output":"#include <optional>\nstd::optional<int> find(bool ok){ return ok? std::optional<int>{42} : std::nullopt; }"}
{"constraints":{},"prompt":"C++: Explain std::move in one line.","provenance":{"prompt_hash":"seed::cpp_std_move","source":"seed","teacher_hash":"2017"},"teacher_output":"std::move casts to an rvalue to enable moving; it does not move by itself."}
{"constraints":{},"prompt":"C++: Give a trivial header-only assert-like macro guarded by NDEBUG.","provenance":{"prompt_hash":"seed::cpp_assert_macro","source":"seed","teacher_hash":"2018"},"teacher_output":"#ifndef NDEBUG\n#define A_ASSERT(x) do{ if(!(x)) std::abort(); }while(0)\n#else\n#define A_ASSERT(x) do{}while(0)\n#endif"}
{"constraints":{},"prompt":"C++: Thread-safe atomic increment with memory_order_relaxed.","provenance":{"prompt_hash":"seed::cpp_atomic_relaxed","source":"seed","teacher_hash":"2019"},"teacher_output":"#include <atomic>\nstd::atomic<int> c{0}; c.fetch_add(1, std::memory_order_relaxed);"}
{"constraints":{},"prompt":"C++: Explain memory_order_relaxed in one line.","provenance":{"prompt_hash":"seed::cpp_relaxed_line","source":"seed","teacher_hash":"2020"},"teacher_output":"It enforces atomicity but provides no ordering guarantees beyond that."}
{"constraints":{},"prompt":"C++: Show a simple exception-safe file reader using ifstream.","provenance":{"prompt_hash":"seed::cpp_ifstream","source":"seed","teacher_hash":"2021"},"teacher_output":"#include <fstream>\nstd::string read(const char* p){ std::ifstream f(p); return {std::istreambuf_iterator<char>(f), {}}; }"}
{"constraints":{},"prompt":"C++: Summarize exceptions vs error-codes in one line.","provenance":{"prompt_hash":"seed::cpp_exc_vs_codes","source":"seed","teacher_hash":"2022"},"teacher_output":"Exceptions separate error flow from normal flow; error codes keep it explicit but verbose."}
{"constraints":{},"prompt":"C++: Show a minimal header guard pattern.","provenance":{"prompt_hash":"seed::cpp_header_guard","source":"seed","teacher_hash":"2023"},"teacher_output":"#pragma once"}
{"constraints":{},"prompt":"C++: One-line description of RAII for file handles.","provenance":{"prompt_hash":"seed::cpp_raii_file","source":"seed","teacher_hash":"2024"},"teacher_output":"Wrap the handle in an object so the destructor reliably closes it."}
{"constraints":{},"prompt":"Explain in one line: what is a sentence?","provenance":{"prompt_hash":"seed::eng_sentence_def","source":"seed","teacher_hash":"1030"},"teacher_output":"A sentence is a complete thought that starts with a capital letter and ends with terminal punctuation."}
{"constraints":{},"prompt":"Form a conditional in one sentence.","provenance":{"prompt_hash":"seed::eng_conditional","source":"seed","teacher_hash":"1031"},"teacher_output":"If it rains, we will stay inside."}
{"constraints":{},"prompt":"Give an example of a list with commas.","provenance":{"prompt_hash":"seed::eng_list_commas","source":"seed","teacher_hash":"1032"},"teacher_output":"We bought apples, oranges, and grapes."}
{"constraints":{},"prompt":"Correct capitalization: 'monday in april'.","provenance":{"prompt_hash":"seed::eng_caps","source":"seed","teacher_hash":"1033"},"teacher_output":"Monday in April"}
{"constraints":{},"prompt":"Translate to plain English: 'utilize'.","provenance":{"prompt_hash":"seed::eng_plain_utilize","source":"seed","teacher_hash":"1034"},"teacher_output":"use"}
{"constraints":{},"prompt":"Close a conversation politely.","provenance":{"prompt_hash":"seed::eng_close","source":"seed","teacher_hash":"1035"},"teacher_output":"Thanks for your time. Goodbye."}
